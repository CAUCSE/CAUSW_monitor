services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    user: "${MY_UID}:${MY_GID}"
    volumes:
      - ./prometheus.yml:/prometheus/prometheus.yml
      - ./prometheus-data:/prometheus
    command:
      - '--storage.tsdb.retention.time=7d'
      - '--storage.tsdb.retention.size=512MB'
    networks:
      - monitoring-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: "${MY_UID}:${MY_GID}"
    volumes:
      - ./grafana-data:/var/lib/grafana
    networks:
      - monitoring-network
    restart: unless-stopped
    environment:
      - GF_SERVER_DOMAIN=${DOMAIN}
      - GF_SERVER_ROOT_URL=https://${DOMAIN}

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot
      - ./nginx/data:/etc/letsencrypt
    depends_on:
      - grafana
      - prometheus
    networks:
      - monitoring-network
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/data:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew; done'"
    networks:
      - monitoring-network
    restart: unless-stopped

networks:
  monitoring-network:
    driver: bridge